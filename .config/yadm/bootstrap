#!/usr/bin/bash

# Get the current operating system
OS=$(uname -a)

# This allows us to refresh sudo timeout
# while :; do sudo -v; sleep 59; done &
# Remember to kill this at the end
# infiloop=$!

echo $OS
if [[ "$OS" == *"Ubuntu"* ]]; then
  echo "We are at Ubutu"
fi

# Install zsh if we haven't already
if [ ! $(command -v zsh) ]; then
    echo "Install zsh"
    if [[ "$OS" == *"Ubuntu"* ]]; then
        sudo apt install zsh -y
    elif [[ "$OS" == *"Arch"* || "$OS" == *"Manjaro"* ]]; then
        sudo pacman -S zsh --noconfirm
    fi
    chsh -s $(which zsh) # this will require a restart later
fi

# Install our defined yadm submodules, e.g. Emacs Config, org documents, zsh autocomplete etc.
yadm submodule update --recursive --init

# Update the remote of the Emacs config, such that we can push later
# cd $HOME/.config/doom && git remote set-url origin git@github.com:lukas018/emacs-config.git

# Update the systems package manager
if [[ "$OS" == *"Ubuntu"* ]]; then
    echo "We install some packages"
    sudo apt update
    sudo apt install unzip wget git curl apt-transport-https -y
elif [[ "$OS" == *"Arch"* || "$OS" == *"Manjaro"* ]]; then
    # Enable parallell downloads with pacman
    echo "ParallelDownloads = 5" >> /etc/pacman.conf
    pacman -Syu
    pacman -S --needed base-devel
    # Install paru to so we can use the AUR
    git clone https://aur.archlinux.org/paru.git repos/ && cd repos/paru && makepkg -si
fi

# Change some permissions
chmod 700 ~/.cache ~/.config

# Get the working directory of the  bootstrap script
DIR="$(cd "$(dirname "$0")" && pwd)"

# Install starship prompt for zsh
# if [ ! $(command -v zsh) ]; then
#	
# fi

yes | sh -c "$(curl -fsSL https://starship.rs/install.sh)"

# Setup our default shell environment with python
bash $DIR/setup-python.sh

# Install node package manager
curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | zsh

zsh -ic "nvm install node"

# Install the fonts we require
zsh $DIR/setup-fonts.sh

# Install docker and docker-compose
if [[ "$OS" == *"Ubuntu"* ]]; then
    sudo apt install docker docker-compose -y
elif [[ "$OS" == *"Arch"* || "$OS" == *"Manjaro"* ]]; then
    paru -S docker docker-compose --noconfirm
fi

# Installing Emacs
if [[ "$OS" == *"Ubuntu"* ]]; then
    sudo apt install libtool libtool-bin -y # For building vterm in Emacs
    sudo apt install snapd -y
    sudo snap install emacs --classic
elif [[ "$OS" == *"Arch"* || "$OS" == *"Manjaro"* ]]; then
    # Install this with paru for conveniance
    paru -S libgccjit --noconfirm

    # Here we need to edit the packagefile to enable JIT
    mkdir repos
    git clone https://aur.archlinux.org/emacs-git.git repos
    # Build emacs
    cd repos/emacs-git && sed -i 's/JIT=/JIT="YES"/g' PKGBUILD && makepgk -si --noconfirm
fi

# Tangle our Emacs Config & install Doom Emacs
emacs --batch --eval "(progn (require 'org) (setq org-confirm-babel-evaluate nil) (org-babel-tangle-file \"~/.config/doom/config.org\"))"
git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d
yes |  bash $HOME/.config/doom/setup.sh
yes | ~/.emacs.d/bin/doom install

# Apply the current emacs theme to the entire system using wal
# emacs --batch --eval "theme-magic-from-emacs" && cp ~/.cache/wal/colors.Xresources ~/.Xresources && xrdb ~/.Xresources

# Install LaTex and some utilities
if [[ "$OS" == *"Ubuntu"* ]]; then
    sudo apt install texlive-latex-extra -y
elif [[ "$OS" == *"Arch"* || "$OS" == *"Manjaro"* ]]; then
    # should go pretty fast with parallel install
    paru -S texlive-most tllocalmgr-git --noconfirm
fi

# Optional tethering support
if [[ "$OS" == *"Ubuntu"* ]]; then
    #sudo add-apt-repository ppa:pmcenery/ppa && apt update && apt install ipeth-utils -y
elif [[ "$OS" == *"Arch"* || "$OS" == *"Manjaro"* ]]; then
    paru -S libimobiledevice --noconfirm
fi

# Install EPSON Printer drivers, arch only
if [[ "$OS" == *"Arch"* || "$OS" == *"Manjaro"* ]]; then
    paru -S epson-inkjet-printer-escpr --noconfirm
fi

# Kill sudo refresh
#kill "$infiloop"

# Ask the user if we shold logout
read -r -p "Want to logout for changes to take effect? [Y/n] " input
case $input in
    [yY][eE][sS]|[yY])
        pkill -f x
        ;;
    [nN][oO]|[nN])
        echo "Ok"
        ;;
    *)
    echo "Ok"
    exit 1
    ;;
esac
